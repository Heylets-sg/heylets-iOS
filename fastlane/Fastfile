default_platform(:ios)

desc "Build app and upload to TestFlight"
lane :upload_testflight do
  app_store_connect_api_key(
    key_id: "{KEY_ID}",
    issuer_id: "{ISSUER_ID}",
    key_filepath: "fastlane/AuthKey_8F7ZA35DHY.p8"
  )

  match(type: "appstore")

  # 최신 TestFlight 빌드 번호 가져오기
  latest_build_number = latest_testflight_build_number(version: "{APP_VERSION}")

  # 빌드 번호 증가
  increment_build_number(
    build_number: latest_build_number + 1,
    xcodeproj: "{PATH}/{PROJECT_NAME}.xcodeproj"
  )

  # 앱 빌드
  build_app(
    workspace: "{WORKSPACE_NAME}.xcworkspace",
    scheme: "{SCHEME_NAME}",
    clean: true,
    export_method: "app-store",
    include_bitcode: false
  )

  # TestFlight 업로드
  upload_to_testflight(
    username: "{USER_EMAIL}",
    app_identifier: "{APP_BUNDLE_ID}"
  )

  # Slack에 메시지 보내기
  slack(
    message: "TestFlight 배포 성공 🍀",
    slack_url: "https://hooks.slack.com/services/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",
    payload: {
      "Build Date" => Time.now.to_s
    },
    success: true
  )
end

# 공통 에러 핸들링
error do |lane, exception, _options|
  slack(
    message: "🚨 Fastlane 에러 발생: #{exception}",
    success: false,
    slack_url: "https://hooks.slack.com/services/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"
  )
end
