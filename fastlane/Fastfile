default_platform(:ios)

desc "build app and upload to testflight"
lane :upload_testflight do
  app_store_connect_api_key(
    key_id: "{KEY_ID}",
    issuer_id: "{ISSUER_ID}",
    key_filepath: "{P8_KEY_FILE_PATH}"
  )

  match(type: "appstore")

  latest_build_number=latest_testflight_build_number(version:"{APP_VERSION}")

  increment_build_number(
    build_number: latest_testflight_build_number + 1,
    xcodeproj: "{PATH}/{PROJECT_NAME}.xcodeproj"
  )

  build_app(
    workspace: "{WORKSPACE_NAME}.xcworkspace",
    scheme: "{SCHEME_NAME}"
    clean: true,
    export_method: "app-store",
    include_bitcode: false,
  )

  upload_to_testflight(
    username: "{USER_EMAIL}",
    app_identifier: "{APP_BUNDLE_ID}"
  )

  # Slack에 메시지 보내기
  slack(
    message: "Testflight 배포 성공 🍀",
    slack_url: "https://hooks.slack.com/services/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",
    payload: {
        "Build Date" => Time.new.to_s,
    },
    success: true
  )
end

platform :ios do
  error do |lane, exception, options|
    slack(
      message: "에러 발생 : #{exception}",
      success: false,
      slack_url: "https://hooks.slack.com/services/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"
    )
  end
end